// Generated by BUCKLESCRIPT VERSION 4.0.18, PLEASE EDIT WITH CARE
'use strict';

var List = require("bs-platform/lib/js/list.js");
var $$Array = require("bs-platform/lib/js/array.js");
var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var $$String = require("bs-platform/lib/js/string.js");
var Pervasives = require("bs-platform/lib/js/pervasives.js");
var Caml_option = require("bs-platform/lib/js/caml_option.js");
var ReasonReact = require("reason-react/src/ReasonReact.js");

var pointComponent = ReasonReact.statelessComponent("Point");

function make(pointText, _children) {
  return /* record */[
          /* debugName */pointComponent[/* debugName */0],
          /* reactClassInternal */pointComponent[/* reactClassInternal */1],
          /* handedOffState */pointComponent[/* handedOffState */2],
          /* willReceiveProps */pointComponent[/* willReceiveProps */3],
          /* didMount */pointComponent[/* didMount */4],
          /* didUpdate */pointComponent[/* didUpdate */5],
          /* willUnmount */pointComponent[/* willUnmount */6],
          /* willUpdate */pointComponent[/* willUpdate */7],
          /* shouldUpdate */pointComponent[/* shouldUpdate */8],
          /* render */(function (_self) {
              return React.createElement("div", undefined, pointText);
            }),
          /* initialState */pointComponent[/* initialState */10],
          /* retainedProps */pointComponent[/* retainedProps */11],
          /* reducer */pointComponent[/* reducer */12],
          /* jsElementWrapped */pointComponent[/* jsElementWrapped */13]
        ];
}

var PointComponent = /* module */[
  /* pointComponent */pointComponent,
  /* make */make
];

var component = ReasonReact.statelessComponent("PointList");

function make$1(points, _children) {
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */component[/* didMount */4],
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function (_self) {
              return React.createElement("ul", {
                          className: "c-list"
                        }, $$Array.of_list(List.map((function (point) {
                                    return React.createElement("li", {
                                                className: "c-list__item"
                                              }, ReasonReact.element(undefined, undefined, make(point, /* array */[])));
                                  }), points)));
            }),
          /* initialState */component[/* initialState */10],
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */component[/* reducer */12],
          /* jsElementWrapped */component[/* jsElementWrapped */13]
        ];
}

var PointList = /* module */[
  /* component */component,
  /* make */make$1
];

function setInputRef(theRef, param) {
  param[/* state */1][/* inputRef */1][0] = (theRef == null) ? undefined : Caml_option.some(theRef);
  return /* () */0;
}

var component$1 = ReasonReact.reducerComponent("PointsEditRow");

function make$2(onComplete, _children) {
  return /* record */[
          /* debugName */component$1[/* debugName */0],
          /* reactClassInternal */component$1[/* reactClassInternal */1],
          /* handedOffState */component$1[/* handedOffState */2],
          /* willReceiveProps */component$1[/* willReceiveProps */3],
          /* didMount */(function (self) {
              var match = self[/* state */1][/* inputRef */1][0];
              if (match !== undefined) {
                Caml_option.valFromOption(match).focus();
                return /* () */0;
              } else {
                return /* () */0;
              }
            }),
          /* didUpdate */component$1[/* didUpdate */5],
          /* willUnmount */component$1[/* willUnmount */6],
          /* willUpdate */component$1[/* willUpdate */7],
          /* shouldUpdate */component$1[/* shouldUpdate */8],
          /* render */(function (self) {
              return React.createElement("div", {
                          className: "o-grid"
                        }, React.createElement("div", {
                              className: "o-grid__cell o-grid__cell--width-80"
                            }, React.createElement("input", {
                                  ref: Curry._1(self[/* handle */0], setInputRef),
                                  style: {
                                    background: "transparent",
                                    border: "0",
                                    borderBottom: "1px solid black",
                                    outline: "0"
                                  },
                                  size: 80,
                                  type: "text",
                                  value: self[/* state */1][/* text */0],
                                  onChange: (function ($$event) {
                                      return Curry._1(self[/* send */3], /* Edit */[$$event.target.value]);
                                    })
                                })), React.createElement("div", {
                              className: "o-grid__cell"
                            }, React.createElement("button", {
                                  className: "c-button u-small",
                                  disabled: $$String.trim(self[/* state */1][/* text */0]) === "",
                                  type: "button",
                                  onClick: (function (_e) {
                                      return Curry._1(self[/* send */3], /* Done */0);
                                    })
                                }, "Done")));
            }),
          /* initialState */(function (param) {
              return /* record */[
                      /* text */"",
                      /* inputRef : record */[/* contents */undefined]
                    ];
            }),
          /* retainedProps */component$1[/* retainedProps */11],
          /* reducer */(function (action, state) {
              if (action) {
                return /* Update */Block.__(0, [/* record */[
                            /* text */action[0],
                            /* inputRef */state[/* inputRef */1]
                          ]]);
              } else {
                return /* SideEffects */Block.__(1, [(function (_self) {
                              return Curry._1(onComplete, state[/* text */0]);
                            })]);
              }
            }),
          /* jsElementWrapped */component$1[/* jsElementWrapped */13]
        ];
}

var PointEditRow = /* module */[
  /* setInputRef */setInputRef,
  /* component */component$1,
  /* make */make$2
];

var component$2 = ReasonReact.reducerComponent("PointsEditor");

function make$3(_children) {
  return /* record */[
          /* debugName */component$2[/* debugName */0],
          /* reactClassInternal */component$2[/* reactClassInternal */1],
          /* handedOffState */component$2[/* handedOffState */2],
          /* willReceiveProps */component$2[/* willReceiveProps */3],
          /* didMount */component$2[/* didMount */4],
          /* didUpdate */component$2[/* didUpdate */5],
          /* willUnmount */component$2[/* willUnmount */6],
          /* willUpdate */component$2[/* willUpdate */7],
          /* shouldUpdate */component$2[/* shouldUpdate */8],
          /* render */(function (self) {
              var match = self[/* state */1][/* addingNew */1];
              return React.createElement("div", {
                          className: "c-card"
                        }, React.createElement("div", {
                              className: "c-card__body"
                            }, ReasonReact.element(undefined, undefined, make$1(self[/* state */1][/* points */0], /* array */[])), match ? ReasonReact.element(undefined, undefined, make$2((function (text) {
                                          return Curry._1(self[/* send */3], /* Save */[text]);
                                        }), /* array */[])) : React.createElement("button", {
                                    className: "c-button u-small",
                                    type: "button",
                                    onClick: (function (_e) {
                                        return Curry._1(self[/* send */3], /* Add */0);
                                      })
                                  }, "Add")));
            }),
          /* initialState */(function (param) {
              return /* record */[
                      /* points : [] */0,
                      /* addingNew */false
                    ];
            }),
          /* retainedProps */component$2[/* retainedProps */11],
          /* reducer */(function (action, state) {
              if (action) {
                return /* Update */Block.__(0, [/* record */[
                            /* points */Pervasives.$at(state[/* points */0], /* :: */[
                                  action[0],
                                  /* [] */0
                                ]),
                            /* addingNew */false
                          ]]);
              } else {
                return /* Update */Block.__(0, [/* record */[
                            /* points */state[/* points */0],
                            /* addingNew */true
                          ]]);
              }
            }),
          /* jsElementWrapped */component$2[/* jsElementWrapped */13]
        ];
}

exports.PointComponent = PointComponent;
exports.PointList = PointList;
exports.PointEditRow = PointEditRow;
exports.component = component$2;
exports.make = make$3;
/* pointComponent Not a pure module */
